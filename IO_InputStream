# IO--Stream

//IO输入流的相关操作代码演示

import java.io.*;
import java.net.Socket;

public class IODemo {
    /*
       *1.可以从文件中读
       * 2.可以从网络中读（网卡/TCP连接）
       * 3.可以从内存中读（内存中的一段空间当成输入源）
       * 4.可以从标准输入读
       * @return
     */
    public static InputStream 获取一个输入流()throws IOException {
        InputStream inputStream;
        //从文件中读
        //inputStream=new FileInputStream("本地文件.txt");

        //从内存中读
        //byte[] bytes="我只是内存中的一段空间\r\n第二行\r\n".getBytes("UTF-8");
        //inputStream =new ByteArrayInputStream(bytes);

        //从标准输出读
        //inputStream=System.in;

        //从网络中读
        //向百度发出一个请求：
        Socket socket=new Socket("www.baidu.com",80);
        OutputStream os=socket.getOutputStream();
        Writer writer=new OutputStreamWriter(os,"UTF-8");
        PrintWriter printWriter=new PrintWriter(writer,false);
        printWriter.printf("GET/HTTP/1.0\r\n\r\n");
        printWriter.flush();
        //百度回应：
        inputStream=socket.getInputStream();
        
        return inputStream;
    }

    /*
    *
    *1.直接通过字节方式读，然后程序进行字符编码
    * 2.把Stream转化为Reader，进行字符形式读取
    *     2.1 直接读
    *     2.2 BufferedReader 的  readLine方法
    * 3.Scanner也可以
    * @param is
    * @return
     */
    private static String 从字节流中最终获得字符数据(InputStream is) throws IOException{
        /*第一种
        byte[] buffer=new byte[1024];
        int len=is.read(buffer);
        //数据放在buffer[0,len)
        String message=new String(buffer,0,len,"UTF-8");

        return message;
        */

        /*
        Reader reader=new InputStreamReader(is,"UTF-8");//看到Reader，就说明已经是字符流
        char[] buffer=new char[1024];
        int len=reader.read(buffer);
        String message=new String(buffer,0,len);
        return message;
        */


//下面的代码能保证Buffer一次读完

        StringBuilder sb=new StringBuilder();
        Reader reader=new InputStreamReader(is,"UTF-8");//看到Reader，就说明已经是字符流
        char[] buffer=new char[10];
        int len;
        while ((len=reader.read(buffer))!=-1){
            sb.append(buffer,0,len);
        }
        String message=sb.toString();
        return message;

        /* //只是一个buffer的特例，不一定能一次读完
        Reader reader=new InputStreamReader(is,"UTF-8");
        BufferedReader bufferedReader=new BufferedReader(reader);
        String line;
        StringBuilder sb=new StringBuilder();
        while ((line=bufferedReader.readLine())!=null){
            sb.append(line+"\r\n");//不加\r\n，
                                 “这个只是本地的一个文件然后这是第二行”这句话不会换行
                                  加了才会换行(输出格式是这样)：这个只是本地的一个文件
                                                                然后这是第二行
        }
        return sb.toString();
       */
    }

    public static void main(String[] args) throws IOException {
        InputStream is=获取一个输入流();
        String message=从字节流中最终获得字符数据(is);
        System.out.println(message);
    }
}


//本地文件.txt
这个只是本地的一个文件
然后这是第二行
